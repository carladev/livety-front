@use "styles/colors" as colors;
@use "styles/breakpoints" as breakpoints;
@use "styles/material-palettes" as material-palettes;
@use "styles/global/buttons-list" as global-buttons-list;
@use "styles/global/buttons" as global-buttons;
@use "styles/global/cards" as global-cards;
@use "styles/global/dialogs" as global-dialogs;
@use "styles/global/snack-bars" as global-snack-bars;
@use "styles/global/form" as global-form;

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.
@import "@ctrl/ngx-emoji-mart/picker";

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$app-primary: mat.define-palette(material-palettes.$primary);
$app-accent: mat.define-palette(material-palettes.$accent);

// The warn palette is optional (defaults to red).
$app-warn: mat.define-palette(material-palettes.$warn);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$app-theme: mat.define-light-theme(
  (
    color: (
      primary: $app-primary,
      accent: $app-accent,
      warn: $app-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($app-theme);

/* You can add global styles to this file, and also import other style files */
* {
  font-family: "Poppins", sans-serif;
}

body {
  margin: 0;
  background-color: colors.$app-background;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

.mdc-notched-outline__notch {
  border-right: none !important;
}

a[mat-button].app-round-button,
button[mat-button].app-round-button,
a[mat-flat-button].app-round-button,
button[mat-flat-button].app-round-button {
  @include global-buttons.round-button;
}

.cdk-overlay-pane.app-dialog {
  @include global-dialogs.dialog;
}

.cdk-overlay-pane.app-confirm-dialog {
  @include global-dialogs.confirm-dialog;
}

.cdk-overlay-pane.mat-mdc-snack-bar-handset {
  pointer-events: none;
}

mat-snack-bar-container.app-snack-bar-success {
  @include global-snack-bars.success;
}

mat-snack-bar-container.app-snack-bar-error {
  @include global-snack-bars.error;
}

mat-card.app-card {
  @include global-cards.card();
}

table[mat-table].app-table-buttons-list {
  @include global-buttons-list.table-list();
}

mat-form-field.mat-mdc-form-field {
  @include global-form.input();
}

.mat-mdc-paginator-range-label {
  @include breakpoints.gt-xs {
    display: block;
  }
  display: none;
}
